@model MovieBook.Models.Movie

@{
    ViewBag.Title = "Edit";
}
<div class="container">
    <div class="border container" style="padding:50px;">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MovieID)
                <div class="row">
                    <div class="col-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { rows = "10", cols = "50", htmlAttributes = new { @class = "form-control form-control-sm" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ImageURL, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ImageURL, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                @Html.ValidationMessageFor(model => model.ImageURL, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Genre, new List<SelectListItem> {
                                                                new SelectListItem{Text="Action",Value="1"},
                                                                new SelectListItem{Text="Comedy",Value="2"},
                                                                new SelectListItem{Text="Romance",Value="3"},
                                                                new SelectListItem{Text="Drama",Value="4"},
                                                                new SelectListItem{Text="Horror",Value="5"},
                                                                new SelectListItem{Text="Animation",Value="6"}}, "Genre",
                    new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                            </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Actors, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                        @Html.ValidationMessageFor(model => model.Actors, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Producer, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                        @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                        @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Writer, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Writer, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                        @Html.ValidationMessageFor(model => model.Writer, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control form-control-sm " } })
                                        @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Ratings, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Ratings, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                        @Html.ValidationMessageFor(model => model.Ratings, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TrendingStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.TrendingStatus)
                                            @Html.ValidationMessageFor(model => model.TrendingStatus, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-success" />
                                </div>
                            </div>
                       
                    </div>
                </div>
            </div>
        }


            <div>
                @Html.ActionLink("BackToList", "Index", "Movie", htmlAttributes: new { id = "loginLink", @class = "btn btn-secondary" })
            </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

    </div>
</div>


